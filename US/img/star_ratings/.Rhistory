print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''))
par(bg = 'black')
tiff("test.tiff", units="in", width=5, height=5, res=300)
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("white","red"))
dev.off()
}
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = '', res = 1200, pointsize = 4))
par(bg = 'black')
tiff("test.tiff", units="in", width=5, height=5, res=300)
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("white","red"))
dev.off()
}
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = '', res = 1200, pointsize = 4))
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("white","red"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res = 1200, pointsize = 4)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("white","red"))
dev.off()
}
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res = 1000, pointsize = 4)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("white","red"))
dev.off()
}
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res = 900, pointsize = 4)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("white","red"))
dev.off()
}
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res = 500, pointsize = 4)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("white","red"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res = 700, pointsize = 4)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("white","red"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res = 800, pointsize = 4)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("white","red"))
dev.off()
}
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res = 700, pointsize = 4)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("white","red"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=4800, height=4800, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("white","red"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("white","red"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "gray", col=c("black","red"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "white", col=c("black","red"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#EA3C53", col=c("black","red"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#EA3C53", col=c("black","#EA3C53"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'transparent')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
dev.off()
}
print(i)
system(paste0('convert "',imageFile,
'" -crop ',
sizeX,
'x',
sizeY,
'+',
beginningX,
'+',
beginningY,
' "',
outputFile,'"'))
install.packages("magick")
#install.packages("magick")
library(magick)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
image_crop(pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862")), "100x150+50")
dev.off()
}
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
dev.off()
}
print(i)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
image_crop(image, "100x150+50")
dev.off()
}
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
plot(1:10)
library(gridGraphics)
library(grid)
library(gridGraphics)
library(tidyverse)
#install.packages("magick")
library(magick)
library(grid)
library(gridGraphics)
trials <- read_csv("./faces.csv")
# add complementary values column for rest of pie chart
trials <- trials %>%
dplyr::mutate(restOfChart = 100 - `exact value`)
# take out .jpeg from image column
trials$image <- substr(trials$image,1,nchar(trials$image)-4)
plot(1:10)
p <- recordPlot()
plot.new() ## clean up device
p # redraw
## grab the scene as a grid object
grid.echo()
pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
## grab the scene as a grid object
grid.echo()
a <- grid.grab()
## draw it, changes optional
grid.newpage()
a <- editGrob(a, vp=viewport(width=unit(2,"in")), gp=gpar(fontsize=10))
grid.draw(a)
p <- recordPlot()
plot.new() ## clean up device
pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
## grab the scene as a grid object
grid.echo()
a <- grid.grab()
grid.echo()
## grab the scene as a grid object
grid.echo(pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
)
## grab the scene as a grid object
grid.echo(pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862")))
a <- grid.grab(pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
)
## draw it, changes optional
grid.newpage()
a <- editGrob(a, vp=viewport(width=unit(2,"in")), gp=gpar(fontsize=10))
## draw it, changes optional
grid.newpage(pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
)
plot(1:10)
z.plot1<-function(){pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862"))}
z.plot1()
pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
trials$restOfChart[1]
trials$`exact value`[1]
pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
pie(c(trials$restOfChart[1], trials$`exact value`[1]))
#image_crop(image, "100x150+50")
dev.off()
pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
z.plot1<-function(){pie(c(trials$restOfChart[1], trials$`exact value`[1]), labels = c(""), border = "#F79862", col=c("black","#F79862"))}
z.plot1()
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
z.plot1<-function(){pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862"))}
image_crop(z.plot1(), "100x150+50")
dev.off()
}
bp<- ggplot(trials, aes(x="", y=trials$restOfChart[i]))+
geom_bar(width = 1, stat = "identity")
bp
bp<- ggplot(trials, aes(x="", y=trials$restOfChart[1]))+
geom_bar(width = 1, stat = "identity")
bp
bp<- ggplot(trials, aes(x="", c(y=trials$restOfChart[1], trials$`exact value`[1]))+
bp
bp<- ggplot(trials, aes(x="", c(y=trials$restOfChart[1], trials$`exact value`[1]))+
bp <- ggplot(trials, aes(x="", c(y=trials$restOfChart[1], trials$`exact value`[1])))+
geom_bar(width = 1, stat = "identity")
bp
list.files()
all.files <- list.files()
my.files <- grep(".*gpg", all_files, value=T)
my.files <- grep(".*jpg", all_files, value=T)
my.files
my.files <- grep(".*jpg", all_files, value=T)
all.files <- list.files()
my.files <- grep(".*jpg", all_files, value=T)
list.files()
all.files <- list.files()
all.files
grep(".*jpg", all_files, value=T)
my.files <- grep(".*jpg", all.files, value=T)
my.files
my.files
# save
}
# select only jpg
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
for(i in my.files){
# do your operations here
image_crop(my.files[i], "100x150+50")
# save
}
list.files(path = Folder, pattern = "*.jpg", full.names=TRUE)
files <- list.files(path = ./, pattern = "*.jpg", full.names=TRUE)
files <- list.files(pattern = "*.jpg", full.names=TRUE)
files
all_im <- lapply(files, load.image )
all_im <- lapply(files, load.image)
files
all_im <- lapply(files, load.image())
?lapplt
?lapply
all_im <- lapply(files, load.image
all_im
all_im <- lapply(files, load.image)
load.image
/load.image
library(imager)
install.packages("imager")
#install.packages("imager")
library(imager)
files <- list.files(pattern = "*.jpg", full.names=TRUE)
all_im <- lapply(files, load.image)
#install.packages("imager")
library(imager)
install.packages("imager")
library(imager)
files <- list.files(pattern = "*.jpg", full.names=TRUE)
all_im <- lapply(files, load.image)
files
myImageList <- lapply(files, readImage)
readImage
library(Imagick)
install.packages(Imagick)
install.packages("Imagick")
#install.packages("Imagick")
library(Imagick)
#install.packages("magick")
library(magick)
files
image_read("./AAM10_neux.jpg")
image_read("./AAM10_neux.jpg")
a <- image_read("./AAM10_neux.jpg")
image_crop(a, "100x150+50")
a <- image_read("./AAM10_neux.jpg")
image_crop(a, "100x150+50")
a <- image_read("./AAM10_neux.jpg")
image_crop(a, "100x150+50")
a <- image_read("./AAM10_neux.jpg")
a
files <- list.files(pattern = "*.jpg", full.names=TRUE)
all_im <- lapply(files, image_read)
View(all_im)
# select only jpg
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
dim(my.files)
my.files
length(my.files)
# select only jpg
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
for(i in 1:length(my.files)) {
image <- image_read(file = paste(trials$image[i], '.jpg', sep = ''))
image_cropped <- image_crop(image, "100x150+50")
image_write(image_cropped, path = paste(trials$image[i], '.jpg', sep = ''), format = "jpg")
}
??image_read
image <- magick::image_read(file = paste(trials$image[i], '.jpg', sep = ''))
for(i in 1:length(my.files)) {
image <- magick::image_read(file = paste(trials$image[i], '.jpg', sep = ''))
image_cropped <- image_crop(image, "100x150+50")
image_write(image_cropped, path = paste(trials$image[i], '.jpg', sep = ''), format = "jpg")
}
my.files
image <- magick::image_read(myfiles[i])
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
for(i in 1:length(my.files)) {
image <- magick::image_read(myfiles[i])
image_cropped <- image_crop(image, "100x150+50")
image_write(image_cropped, path = paste(trials$image[i], '.jpg', sep = ''), format = "jpg")
}
# select only jpg
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
for(i in 1:length(my.files)) {
image <- magick::image_read(my.files[i])
image_cropped <- image_crop(image, "100x150+50")
image_write(image_cropped, path = paste(trials$image[i], '.jpg', sep = ''), format = "jpg")
}
print(i)
# select only jpg
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
for(i in 1:length(my.files)) {
image <- magick::image_read(my.files[i])
image_cropped <- image_crop(image, "100x100+50+50")
image_write(image_cropped, path = paste(trials$image[i], '.jpg', sep = ''), format = "jpg")
}
# select only jpg
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
for(i in 1:length(my.files)) {
image <- magick::image_read(my.files[i])
image_cropped <- image_crop(image, "100x100+50+50")
image_write(image_cropped, path = my.files[i]), format = "jpg")
# select only jpg
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
for(i in 1:length(my.files)) {
image <- magick::image_read(my.files[i])
image_cropped <- image_crop(image, "100x100+50+50")
image_write(image_cropped, path = my.files[i], format = "jpg")
}
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
library(tidyverse)
#install.packages("magick")
library(magick)
trials <- read_csv("./faces.csv")
# add complementary values column for rest of pie chart
trials <- trials %>%
dplyr::mutate(restOfChart = 100 - `exact value`)
# take out .jpeg from image column
trials$image <- substr(trials$image,1,nchar(trials$image)-4)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
#image_crop(image, "100x150+50")
dev.off()
}
print(i)
# select only jpg
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
for(i in 1:length(my.files)) {
image <- magick::image_read(my.files[i])
image_cropped <- image_trim(image)
image_write(image_cropped, path = my.files[i], format = "jpg")
}
print(i)
?image_write
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
library(tidyverse)
#install.packages("magick")
library(magick)
trials <- read_csv("./faces.csv")
# add complementary values column for rest of pie chart
trials <- trials %>%
dplyr::mutate(restOfChart = 100 - `exact value`)
# take out .jpeg from image column
trials$image <- substr(trials$image,1,nchar(trials$image)-4)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
#image_crop(image, "100x150+50")
dev.off()
}
print(i)
# select only jpg
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
for(i in 1:length(my.files)) {
image <- magick::image_read(my.files[i])
image_cropped <- image_trim(image)
image_write(image_cropped, path = my.files[i], format = "jpg", width=2400, height=2400)
}
# select only jpg
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
for(i in 1:length(my.files)) {
image <- magick::image_read(my.files[i])
image_cropped <- image_trim(image)
image_cropped <- image_scale(image_cropped, "200")
image_write(image_cropped, path = my.files[i], format = "jpg")
}
print(i)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
library(tidyverse)
#install.packages("magick")
library(magick)
trials <- read_csv("./faces.csv")
# add complementary values column for rest of pie chart
trials <- trials %>%
dplyr::mutate(restOfChart = 100 - `exact value`)
# take out .jpeg from image column
trials$image <- substr(trials$image,1,nchar(trials$image)-4)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
#image_crop(image, "100x150+50")
dev.off()
}
print(i)
# select only jpg
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
for(i in 1:length(my.files)) {
image <- magick::image_read(my.files[i])
image_cropped <- image_trim(image)
image_cropped <- image_scale(image_cropped, "50")
image_write(image_cropped, path = my.files[i], format = "jpg")
}
print(i)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
library(tidyverse)
#install.packages("magick")
library(magick)
trials <- read_csv("./faces.csv")
# add complementary values column for rest of pie chart
trials <- trials %>%
dplyr::mutate(restOfChart = 100 - `exact value`)
# take out .jpeg from image column
trials$image <- substr(trials$image,1,nchar(trials$image)-4)
for(i in 1:dim(trials)[1]) {
jpeg(file = paste(trials$image[i], '.jpg', sep = ''), res=600, width=2400, height=2400, pointsize=10)
par(bg = 'black')
pie(c(trials$restOfChart[i], trials$`exact value`[i]), labels = c(""), border = "#F79862", col=c("black","#F79862"))
#image_crop(image, "100x150+50")
dev.off()
}
print(i)
# select only jpg
all.files <- list.files()
my.files <- grep(".*jpg", all.files, value=T)
for(i in 1:length(my.files)) {
image <- magick::image_read(my.files[i])
image_cropped <- image_trim(image)
image_write(image_cropped, path = my.files[i], format = "jpg")
}
print(i)
